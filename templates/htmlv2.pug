doctype html

style.
	* {
		box-sizing: border-box;
	}
	body {
		background-color: rgb(245, 245, 245);
		color: rgb(30, 30, 30);
		font-family: "Arial", sans-serif;
		font-size: 18px;
		display: flex;
		flex-direction: column;
		align-items: center;
		margin: 0;
	}

	#book-meta {
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	#book-meta > img {
		width: 256px;
		height: 400px;
	}
	#book-meta h1,
	#book-meta h3,
	#book-meta p {
		display: flex;
		text-align: center;
		font-weight: 500;
	}

	.part {
		width: 50%;
		padding: 20px;
		margin-top: 40px;
		display: flex;
		flex-direction: column;
		line-height: 1.5;
	}

	.part img {
		max-width: 100%;
	}

	.avatar {
		border-radius: 50%;
		max-height: 45px;
		margin-left: 5px;
	}
	.book-cover {
		box-shadow: 1px 1px 5px 1px rgba(70, 70, 70, 0.2);
		border-radius: 6px;
		max-height: 400px;
		max-width: 256px;
	}

	#top-control,
	#bottom-control {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		position: fixed;
		left: 0;
		background-color: white;
		transition: top 0.3s, bottom 0.3s;
	}
	.active {
		display: flex!important;
	}
	#top-control.active {
		top: 0;
	}
	#bottom-control.active {
		bottom: 0;
	}
	#top-control {
		top: -60px;
		border-bottom: 1px solid #ddd;
	}
	#bottom-control {
		flex-direction: column;
		bottom: -60px;
	}

	#indicator {
		width: 100%;
		height: 4px;
		display: flex;
		align-items: stretch;
		background-color: #ddd;
	}
	#indicator-bar {
		width: 0;
		background-color: #ff500a;
	}


	button {
		padding: 10px;
		background: 0;
		border: 0;
		cursor: pointer;
		outline: 0;
		font-size: 21px;
	}
	button:hover {
		background-color: rgba(0, 0, 0, 0.1);
	}

	footer {
		width: 100%;
		padding: 10px;
		display: flex;
		justify-content: space-around;
	}
	footer > a {
		color: rgb(120, 120, 120);
	}

	@media only screen and (max-width: 920px) {
		.part {
			width: 100%;
		}
	}

	.shade {
		background-color: rgb(239, 230, 218);
		color: rgb(21, 18, 15);
	}
	.shade #top-control,
	.shade #bottom-control {
		background-color: rgb(253, 246, 236);
		border-color: rgb(203, 186, 168);
	}
	.shade #indicator {
		background-color: rgb(203, 186, 168);
	}

	.dark {
		background-color: rgb(0, 0, 0);
		color: rgb(230, 230, 230);
	}
	.dark #top-control,
	.dark #bottom-control {
		background-color: rgb(20, 20, 20);
		border-color: rgb(70, 70, 70);
	}
	.dark #indicator {
		background-color: rgb(70, 70, 70);
	}


html(lang=langName)

	head
		meta(charset="UTF-8")
		title= book.title
		meta(name="viewport" content="width=device-width, initial-scale=1.0")

	body

		div.part#book-meta

			img.book-cover(src="data:image/jpg;base64," + image  alt="Cover")

			h1= book.title

			h3
				b= lang.book.author +": " + book.user.name
				img.avatar(src="data:image/jpg;base64," + avatar)

			h3
				b= lang.book.pubDate + ": " + new Date(book.lastPublishedPart.createDate).getFullYear()

			p= book.description

		each part in parts
			div.part
				h1= part.title
				div!= part.data

		div#top-control

			button(title="Schriftart ändern" onclick="changeFont()") 🅰️
			button(title="Schriftgröße verkleinern" onclick="changeFontSize(false)") ➖
			button(title="Schriftgröße vergrößern" onclick="changeFontSize(true)") ➕
			button#colormode-button(title="Farbmodus ändern" onclick="changeColorMode()") 🌖

		div#bottom-control
			div#indicator
				span#indicator-bar
			div(style="display: flex; justify-content: space-around; width: 100%; padding: 5px;")
				span
					b= lang.parts + ": "
					span= parts.length
				span
					b Font size:&nbsp;
					span#font-size 18

script.
	const fontList = ["Arial, sans-serif", "Verdana, sans-serif", "Cambria, serif", "cursive", "monospace"];
	let scrollsave = localStorage.getItem("scrollsave");
	let fontsize = localStorage.getItem("fontsize");
	let colormode = localStorage.getItem("colormode");
	let font = localStorage.getItem("font");
	const userPrefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
	if(scrollsave){
		window.scrollTo(0, parseInt(scrollsave));
	}
	if(fontsize){
		document.querySelector("body").style.fontSize = fontsize + "px";
		document.querySelector("#font-size").innerHTML = fontsize.toString();
	}
	if(colormode && colormode === "shade"){
		document.body.classList.add("shade");
		document.querySelector("#colormode-button").innerHTML = "🌑";
	}else if((colormode && colormode === "dark") || (userPrefersDark && colormode !== "light")){
		document.body.classList.add("dark");
		document.querySelector("#colormode-button").innerHTML = "💡";
	}
	if(font){
		let f = parseInt(font);
		document.body.style.fontFamily = fontList[f];
	}

	window.addEventListener("click", (event) => {

		if(!event.composedPath().some((el) => el.id === "top-control" || el.id === "bottom-control")){
			document.querySelector("#top-control").classList.toggle("active");
			document.querySelector("#bottom-control").classList.toggle("active");
		}

	});

	let isScrolling;

	window.addEventListener("scroll", (event) => {

		let currentScroll = Math.round(window.scrollY);
		let maxScroll = document.body.offsetHeight - window.innerHeight

		let percentScrolled = Math.round((currentScroll / maxScroll) * 100);
		document.querySelector("#indicator-bar").style.width = percentScrolled + "%";

		window.clearTimeout(isScrolling);

		isScrolling = setTimeout(() => {
			localStorage.setItem("scrollsave", currentScroll.toString());
		}, 80);

	});

	function changeFontSize(increase){

		let style = window.getComputedStyle(document.body, null).getPropertyValue("font-size");
		let fontSize = parseFloat(style);
		let newFontSize;

		if(increase && fontSize < 28){
			newFontSize = fontSize + 2;

		}else if(increase === false && fontSize > 14){
			newFontSize = fontSize - 2;
		}else{
			return;
		}

		document.querySelector("body").style.fontSize = newFontSize + "px";
		document.querySelector("#font-size").innerHTML = newFontSize.toString();
		localStorage.setItem("fontsize", newFontSize.toString());

	}

	function changeColorMode(){

		if(document.body.classList.contains("shade")){

			document.body.classList.remove("shade");
			document.body.classList.add("dark");
			localStorage.setItem("colormode", "dark");

			document.querySelector("#colormode-button").innerHTML = "💡";

		}else if(document.body.classList.contains("dark")){

			document.body.classList.remove("dark");
			localStorage.setItem("colormode", "light");

			document.querySelector("#colormode-button").innerHTML = "🌖";

		}else{

			document.body.classList.remove("dark");
			document.body.classList.add("shade");
			localStorage.setItem("colormode", "shade");

			document.querySelector("#colormode-button").innerHTML = "🌑";

		}

	}

	function changeFont(){

		let currentFont = window.getComputedStyle(document.body, null).getPropertyValue("font-family");

		let i = fontList.indexOf(currentFont);

		if(i >= 0 && i < fontList.length-1){
			document.body.style.fontFamily = fontList[i + 1];
			localStorage.setItem("font", (i + 1).toString());
		}else{
			document.body.style.fontFamily = fontList[0];
			localStorage.setItem("font", "0");
		}

	}
